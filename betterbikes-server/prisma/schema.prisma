generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid()) @map("userId")
  email         String        @unique
  password      String
  created_at    DateTime      @default(now())
  updated_at    DateTime      @default(now())
  name          String
  phone         String        @unique
  address       String
  role          Role          @default(USER)
  vehicle_posts VehiclePost[]
  Booking       Booking[]
}

model OAuthUser {
  id             String        @id @default(uuid()) @map("oAuthUserId")
  email          String        @unique
  profile_image  String?
  created_at     DateTime      @default(now())
  updated_at     DateTime      @default(now())
  name           String
  phone          String?       @unique
  address        String?
  oAuth_provider String
  oAuth_id       String
  role           Role          @default(USER)
  vehicle_posts  VehiclePost[]
  Booking        Booking[]
}

model VehiclePost {
  vehicle_post_id     String     @id @default(cuid())
  vehicle_type        String
  vehicle_model       String
  vehicle_number      String
  vehicle_image       String
  vehicle_color       String
  vehicle_price       Float
  vehicle_brand       String
  vehicle_name        String
  vehicle_description String
  vehicle_features    String[]
  created_at          DateTime   @default(now())
  updated_at          DateTime   @default(now())
  authUserId          String?    @map("auth_user_id")
  oauthUserId         String?    @map("oauth_user_id")
  authUser            User?      @relation(fields: [authUserId], references: [id])
  oauthUser           OAuthUser? @relation(fields: [oauthUserId], references: [id])
  Booking             Booking[]
}

model Booking {
  booking_id      String      @id @default(cuid())
  vehicle_post_id String
  auth_user_id    String?
  oauth_user_id   String?
  vehicle_post    VehiclePost @relation(fields: [vehicle_post_id], references: [vehicle_post_id])
  auth_user       User?       @relation(fields: [auth_user_id], references: [id])
  oauth_user      OAuthUser?  @relation(fields: [oauth_user_id], references: [id])
  created_at      DateTime    @default(now())
  updated_at      DateTime    @default(now())
  start_date      DateTime
  end_date        DateTime
  total_price     Float
  status          String
}

enum Role {
  USER
  ADMIN
}
